"""
Django settings for webadmins project.

Generated by 'django-admin startproject' using Django 1.9.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import djcelery
from celery import Celery, platforms

djcelery.setup_loader()
BROKER_URL = 'redis://127.0.0.1:16379/5'
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:16379/6'
platforms.C_FORCE_ROOT = True
CELERY = Celery(__file__, broker=BROKER_URL, backend=CELERY_RESULT_BACKEND)


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJ_LIB_DIR = os.path.join(BASE_DIR, 'lib')

import sys
sys.path.insert(0, PROJ_LIB_DIR)

from util import *
from dbControl import *
from logger import log

PROJ_CONFIG_FILE = os.path.join(os.path.join(BASE_DIR, 'config'), 'config.cfg')
PROJ_CONFIG_OBJ = readConfig(PROJ_CONFIG_FILE)
PROJ_DB_CONFIG = PROJ_CONFIG_OBJ.read_config("db")
PROJ_REDIS_CONFIG = PROJ_CONFIG_OBJ.read_config("redis")
POOL = dbPool(PROJ_DB_CONFIG)
LOGGER = log().getLogger()


#django-celery
import djcelery
djcelery.setup_loader()
from celery import Celery, platforms
platforms.C_FORCE_ROOT = True
BROKER_URL = 'redis://{redis_server}:{redis_port}'.format(redis_server=PROJ_REDIS_CONFIG["host"], redis_port=PROJ_REDIS_CONFIG["port"])
CELERY_RESULT_BACKEND = 'redis://{redis_server}:{redis_port}'.format(redis_server=PROJ_REDIS_CONFIG["host"], redis_port=PROJ_REDIS_CONFIG["port"])
CELERY = Celery(__file__, broker=BROKER_URL, backend=CELERY_RESULT_BACKEND)

#print(POOL, id(POOL))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'a(1g!n7!h&*%m-)n=jtc-b&tg=u7z0v92#e#w)i)azh4ew%auj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djcelery',
    'backupPlatform',
    'devops',
]

SESSION_ENGINE = 'django.contrib.sessions.backends.file'
SESSION_FILE_PATH = os.path.join(BASE_DIR, 'session')
SESSION_COOKIE_AGE = 10
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'webadmins.midware_db.midware_db',
    'webadmins.midware_db.midware_logger',
    # 'webadmins.midware_db.midware_force_login',
]

ROOT_URLCONF = 'webadmins.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webadmins.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
#

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
